when:
  event: tag

labels:
  platform: linux/amd64 # it doesn't work on arm64 unfortunately

variables:
  .ssh_setup_start_agent: &ssh_setup_start_agent eval $(ssh-agent -s)
  .ssh_setup_import_key: &ssh_setup_import_key echo "$${CI_PRIVATE_SSH_KEY}" | ssh-add -
  .ssh_setup_configure: &ssh_setup_configure mkdir -p ~/.ssh && echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
  .install_ssh: &install_ssh apk update && apk add openssh-client

steps:
  prepare-env:
    image: alpine:latest
    commands:
      - apk update && apk add git
      - chmod +x ./scripts/*.sh
      - ./scripts/prepare_env.sh

  prepare-storage:
    image: alpine:latest
    environment:
      CI_SSH_HOST:
        from_secret: storage_ssh_host
      CI_SSH_PORT:
        from_secret: storage_ssh_port
      CI_SSH_USER:
        from_secret: storage_ssh_user
      CI_PRIVATE_SSH_KEY:
        from_secret: storage_ssh_key
      CI_STORAGE_PREFIX:
        from_secret: storage_directory_prefix
    commands:
      - export $(grep -v '^#' .env | xargs)
      - *install_ssh
      - *ssh_setup_start_agent
      - *ssh_setup_import_key
      - *ssh_setup_configure
      - mkdir ./dists/
      - ssh -p $${CI_SSH_PORT} $${CI_SSH_USER}@$${CI_SSH_HOST} -- "mkdir $${CI_STORAGE_PREFIX}/$${CI_PRETTY_VERSION}"
    depends_on:
      - prepare-env

  build:
    image: source.hodakov.me/containers/renkit:latest
    environment:
      SDL_AUDIODRIVER: dummy
      SDL_VIDEODRIVER: dummy
      RENPY_VERSION: 8.4.1
      KEYSTORE_APK:
        from_secret: keystore_apk
      KEYSTORE_PASS:
        from_secret: keystore_pass
    commands:
      - export $(grep -v '^#' .env | xargs)
      - sed -i "s#0.0.0-localbuild#$${CI_KSRE_VERSION}#" game/config.rpy
      - sed -i "s#0.0.0-localbuild#$${CI_KSRE_VERSION}#" .android.json
      - sed -i "s#KEYSTORE_APK#$${KEYSTORE_APK}#" renconstruct.toml
      - sed -i "s#KEYSTORE_ALIAS#$${KEYSTORE_ALIAS}#" renconstruct.toml
      - sed -i "s#KEYSTORE_PASS#$${KEYSTORE_PASS}#" renconstruct.toml
      - sed -i "s#RENPY_VERSION#$${RENPY_VERSION}#" renconstruct.toml
      - renconstruct build -c renconstruct.toml . ./dists
    depends_on:
      - prepare-env
      - prepare-storage

  upload-assets:
    image: alpine:latest
    environment:
      CI_SSH_HOST:
        from_secret: storage_ssh_host
      CI_SSH_PORT:
        from_secret: storage_ssh_port
      CI_SSH_USER:
        from_secret: storage_ssh_user
      CI_PRIVATE_SSH_KEY:
        from_secret: storage_ssh_key
      CI_STORAGE_PREFIX:
        from_secret: storage_directory_prefix
    commands:
      - export $(grep -v '^#' .env | xargs)
      - *install_ssh
      - *ssh_setup_start_agent
      - *ssh_setup_import_key
      - *ssh_setup_configure
      - scp -P $${CI_SSH_PORT} ./dists/* "$${CI_SSH_USER}@$${CI_SSH_HOST}:$${CI_STORAGE_PREFIX}/$${CI_PRETTY_VERSION}"
    depends_on:
      - prepare-env
      - prepare-storage
      - build
